name: 🏆 Update Contributors

on:
  push:
    branches: [main]
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    # Only run on push to main or when PR is merged (not just closed)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: 🏆 Update contributors list
      run: |
        set -x
        {
          echo "<div align=\"center\">";
          echo "  <a href=\"https://github.com/admirerr/DSA-Collection/graphs/contributors\">";
        } > contributors.html

        curl -s "https://api.github.com/repos/${{ github.repository }}/contributors?per_page=100" | \
        jq -r '.[] | select(.type != "Bot") | @base64 "\(.login), \(.avatar_url), \(.contributions)"' | \
        while read -r c; do
          if [ -z "$c" ]; then
            continue
          fi
          DECODED=$(echo "$c" | base64 -d)
          IFS=',' read -r login avatar_url contributions <<< "$DECODED"
          echo "    <img src=\"${avatar_url}&s=50\" width=\"50\" height=\"50\" alt=\"$\{login}\"/>" >> contributors.html
        done

        {
          echo "  </a>";
          echo "</div>";
        } >> contributors.html

        python << EOF
        import re

        with open('README.md', 'r+') as f:
            text = f.read()
            with open('contributors.html', 'r') as c:
                contributors_html = c.read()
            
            # Replace everything between the tags
            new_text = re.sub(r'(<!-- CONTRIBUTORS_LIST -->)(.|\n)*(<!-- CONTRIBUTORS_LIST_END -->)',
                              f'\1\n{contributors_html}\n\3',
                              text)
            
            f.seek(0)
            f.write(new_text)
            f.truncate()
        EOF

    - name: 📈 Update language statistics
      run: |
        echo "📈 Updating language statistics..."

        # Count files by language
        cpp_files=$(find CPP/ -name "*.cpp" 2>/dev/null | wc -l || echo 0)
        java_files=$(find Java/ -name "*.java" 2>/dev/null | wc -l || echo 0)
        python_files=$(find Python/ -name "*.py" 2>/dev/null | wc -l || echo 0)

        total_implementations=$((cpp_files + java_files + python_files))

        echo "📊 Language Statistics:"
        echo "C++: $cpp_files files"
        echo "Java: $java_files files"
        echo "Python: $python_files files"
        echo "Total: $total_implementations implementations"

        # Count supported languages
        supported_languages=3 # Base languages: C++, Java, Python

        echo "Supported languages: $supported_languages"

        # Update README stats
        if [ -f "README.md" ]; then
          sed -i "s/💻 \*\*[0-9]*+ Languages\*\* /💻 **${supported_languages}+ Languages**/g" README.md
        fi

    - name: 📅 Update last modified date
      run: |
        echo "📅 Updating last modified date..."
        current_date=$(date +"%B %Y")

        if [ -f "HALL_OF_FAME.md" ]; then
          sed -i "s/\*Last updated: .* [0-9]*\* /\*Last updated: $current_date\*/g" HALL_OF_FAME.md
          echo "✅ Updated last modified date in HALL_OF_FAME.md"
        fi

    - name: 🔍 Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "No changes to commit"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changed files:"
          git diff --name-only
        fi

    - name: 💾 Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        git add README.md HALL_OF_FAME.md

        git commit -m "🏆 Auto-update contributor statistics"

        git push

    - name: 📋 Generate summary
      run: |
        echo "🏆 Contributors Update Summary"
        echo "=============================="
        echo ""
        echo "📊 Statistics:"
        echo "  👥 Total Contributors: ${{ steps.contributors.outputs.total_contributors }}"
        echo "  🔥 Repository Status: Active"
        echo "  📅 Last Updated: $(date)"
        echo ""
        echo "🎉 Contributor statistics updated successfully!"

        if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
          echo "✅ Changes committed and pushed"
        else
          echo "ℹ️ No changes needed"
        fi
